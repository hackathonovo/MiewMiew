/*
 * Created on 20 svi 2017 ( Time 15:57:33 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package hr.miewmiew.MiewMiew.dbmodel.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "AspNetRoles"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="AspNetRoles", schema="dbo", catalog="HackatonIn2" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AspnetrolesEntity.countAll", query="SELECT COUNT(x) FROM AspnetrolesEntity x" )
} )
public class AspnetrolesEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="Id", nullable=false)
    private String     id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="ConcurrencyStamp")
    private String     concurrencystamp ;

    @Column(name="Name")
    private String     name         ;

    @Column(name="NormalizedName")
    private String     normalizedname ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="aspnetroles", targetEntity=AspnetroleclaimsEntity.class)
    private List<AspnetroleclaimsEntity> listOfAspnetroleclaims;

    @ManyToMany(targetEntity=AspnetusersEntity.class)
    @JoinTable(name="AspNetUserRoles", 
      joinColumns=@JoinColumn(name="RoleId", referencedColumnName="Id"),
      inverseJoinColumns=@JoinColumn(name="UserId", referencedColumnName="Id")
     ) 

    private List<AspnetusersEntity> listOfAspnetusers;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AspnetrolesEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( String id ) {
        this.id = id ;
    }
    public String getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : ConcurrencyStamp ( nvarchar ) 
    public void setConcurrencystamp( String concurrencystamp ) {
        this.concurrencystamp = concurrencystamp;
    }
    public String getConcurrencystamp() {
        return this.concurrencystamp;
    }

    //--- DATABASE MAPPING : Name ( nvarchar ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : NormalizedName ( nvarchar ) 
    public void setNormalizedname( String normalizedname ) {
        this.normalizedname = normalizedname;
    }
    public String getNormalizedname() {
        return this.normalizedname;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfAspnetroleclaims( List<AspnetroleclaimsEntity> listOfAspnetroleclaims ) {
        this.listOfAspnetroleclaims = listOfAspnetroleclaims;
    }
    public List<AspnetroleclaimsEntity> getListOfAspnetroleclaims() {
        return this.listOfAspnetroleclaims;
    }

    public void setListOfAspnetusers( List<AspnetusersEntity> listOfAspnetusers ) {
        this.listOfAspnetusers = listOfAspnetusers;
    }
    public List<AspnetusersEntity> getListOfAspnetusers() {
        return this.listOfAspnetusers;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(concurrencystamp);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(normalizedname);
        return sb.toString(); 
    } 

}
